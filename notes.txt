<> Issue 3: (α) Εντοπισμός των εναλλακτικών RA expressions.
		    (β) Επιλογή του καλύτερου RA expression (λιγότερο κόστος).
	
<> Issue 1:
		SELECT * FROM table_name WHERE NOT condition;
		'WHERE' : {
				'not' : condition
		}

		SELECT * FROM table_name WHERE column_name BETWEEN value1 AND value2;
		'WHERE' : {
				'column': column_name 
				'between' : {
								'and' : {
										'left' : value1,
										'right' : value2
								}
				}
		}

		SELECT * FROM table_name WHERE condition1 AND/OR condition2;
		'WHERE' : {
				'column': table_name
				'and' : {
							'left' : condition1,
							'right' : condition2
				},
				'or' : {
							'left' : condition1,
							'right' : condition2
				}
		}

<> Issue 1:    mdb.py, lines 173-177.
                table.py, lines 142,171,210,273,388.
                database.py, lines 287,311,324,337,358,372,374,430,512,542,547,565,637.

<> mdb.py, line 38.
    qsplit = ['select', '*', 'from', 'a', 'where', 'not', 't=a', ';']
    ind = 3
    qsplit[:ind] = ['select', '*', 'from']
    qsplit[:ind].count('(') -> 0
    qsplit[:ind].count(')') -> 0
    return qsplit[:ind].count('(')>qsplit[:ind].count(')') -> return false

<> mdb.py, line 48.
    keywords = ['select', 'from', 'where', 'not', 'distinct', 'order by', 'limit', ';']
    dic = {val: None for val in keywords if val!=';'}
    dic -> {'select': None, 'from': None, 'where': None, 'not': None, 'distinct': None, 'order by': None, 'limit': None}


<> mdb.py, line 50.
    query = 'select * from a where not t=a ;'
    ql = [val for val in query.split(' ') if val !='']
    ql -> ['select', '*', 'from', 'a', 'where', 'not', 't=a', ';']


<> mdb.py, line 63.
    ql = ['select', '*', 'from', 'a', 'where', 'not', 't=a', ';']
    i = 3 
    f'{ql[i]} {ql[i+1]}' -> 'a where'


<> mdb.py, line 73.
    kw_positions=[0, 2, 4, 5, 7]
    i = 3
    ql[kw_positions[i]+1:kw_positions[i+1]] = ['t=a']
    ' '.join(ql[kw_positions[i]+1:kw_positions[i+1]]) -> 't=a'

<> mdb.py, line 138-139.
    from_split=['teacher', 'inner', 'join', 'student', 'on', 'email']
    join_idx = [i for i,word in enumerate(from_split) if word=='join' and not in_paren(from_split,i)] -> [2]
    on_idx = [i for i,word in enumerate(from_split) if word=='on' and not in_paren(from_split,i)] -> [4]

<> mdb.py:
    * Δημιουργώ την αντίστοιχη μέθοδο (evaluate_where_clause) για τον υπολογισμό του where statement  (line 78 and line 167).
    * Έχω υπόψη μου τη μέθοδο interpreter όταν καλεστεί ξανά από ένα subquery (line 210).
